#!/bin/bash
#
# dinnerplate      This is a python app to monitor some web page containing static content thats not supposed to change
#
# chkconfig: 2345 80 30
# description: This is a python app to monitor some web page containing static content thats not supposed to change
# processname: dinnerplated
# pidfile: /var/spool/dinnerplate/pid/dinerplate.pid
#
# Based on startup script from Simon J Mudd <sjmudd@pobox.com>

### BEGIN INIT INFO
# Provides: dinnerplate dinnerplated
# Required-Start: $local_fs $network 
# Required-Stop: $local_fs $network 
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop dinnerplate
# Description: This is a python app to monitor some web page containing static content thats not supposed to change.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

PATH="/sbin:/bin:/usr/sbin:/usr/bin:/opt/monitor/dinnerplate/"

RETVAL=0
exec=/opt/monitor/dinnerplate/dinnerplate.py
prog="dinnerplate.py"
lockfile='/var/lock/subsys/$prog'
pidfile='/var/spool/dinnerplate/pid/dinerplated.pid'

status -p $pidfile -l $(basename $lockfile) dinnerplated.py >/dev/null 2>&1
running=$?



start() {
        echo "blah2"
	[ "$EUID" != "0" ] && exit 4
	# Check that networking is up.
	[ ${NETWORKING} = "no" ] && exit 1
	# Start daemons.
        [ -x $exec ] || exit 5
	echo -n $"Starting dinnerplated: "
        $prog & 
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch $lockfile 
        echo
	return $RETVAL
}

stop() {
        echo "blah stop"
	[ "$EUID" != "0" ] && exit 4
        # Stop daemons.
	echo -n $"Shutting down dinnerplated: "
           if [ -n "`pidfileofproc $exec`" ]; then
                killproc $exec
                RETVAL=3
            else
                failure $"Stopping $prog"
           fi
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f $lockfile 
	echo
	return $RETVAL
}


# See how we were called.
case "$1" in
  start)
	[ $running -eq 0 ] && exit 0
	start
        echo "blah"
	;;
  stop)
	[ $running -eq 0 ] || exit 0
	stop
	;;
  restart|force-reload)
	stop
	start
	;;
  status)
  	status -p $pidfile -l $(basename $lockfile) master
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|status}"
	exit 2
esac

exit $?
